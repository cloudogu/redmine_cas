@startuml
User -> Redmine : Browser-Request
activate Redmine
Redmine -> application_controller_patch : 'cas_user_setup'
activate application_controller_patch
application_controller_patch -> application_controller : 'user_setup'
activate application_controller
application_controller -> application_controller_patch: 'cas_find_current_user'
activate application_controller_patch
activate application_controller
application_controller_patch -> application_controller: 'find_current_user'
activate application_controller
application_controller -> application_controller: 'try_to_autologin'
application_controller -> application_controller: 'try_to_autologin' returns nil
deactivate application_controller
application_controller -> application_controller_patch: 'find_current_user' returns nil
deactivate application_controller
application_controller_patch -> application_controller: 'cas_find_current_user' returns nil
deactivate application_controller_patch
application_controller -> application_controller: User.current = nil
application_controller -> application_controller_patch
application_controller_patch -> application_controller_patch: reload: User.current = User.find_by_login(User.current.login)
application_controller_patch -> Redmine
deactivate application_controller_patch
deactivate application_controller
Redmine -> Redmine: before_action hook (check_if_login_required)
Redmine -> application_controller_patch : 'cas_check_if_login_required'
activate application_controller_patch
application_controller_patch -> application_controller : 'check_if_login_required'
activate application_controller
application_controller -> application_controller_patch: 'require_login_with_cas'
deactivate application_controller
application_controller_patch -> Redmine: Redirect to action (account_controller_patch::cas)
deactivate application_controller_patch
Redmine -> application_controller_patch : 'cas_user_setup'
activate application_controller_patch
application_controller_patch -> application_controller : 'user_setup'
activate application_controller
application_controller -> application_controller_patch: 'cas_find_current_user'
activate application_controller_patch
activate application_controller
application_controller_patch -> application_controller: 'find_current_user'
activate application_controller
application_controller -> application_controller: 'try_to_autologin'
application_controller -> application_controller: 'try_to_autologin' returns nil
deactivate application_controller
application_controller -> application_controller_patch: 'find_current_user' returns nil
deactivate application_controller
application_controller_patch -> application_controller: 'cas_find_current_user' returns nil
deactivate application_controller_patch
application_controller -> application_controller: User.current = nil
application_controller -> application_controller_patch
application_controller_patch -> application_controller_patch: reload: User.current = User.find_by_login(User.current.login)
application_controller_patch -> Redmine
deactivate application_controller_patch
deactivate application_controller
Redmine -> application_controller_patch: 'cas'
activate application_controller_patch
application_controller_patch -> Redmine
deactivate application_controller_patch
Redmine -> Redmine: 'CASClient::Frameworks::Rails::Filter' handles redirect
note over Redmine: The filter is registered at app startup in 'redmine_cas::setup!'
Redmine -> User: Redirect to cas login url
deactivate Redmine
User -> User: Do cas Workflow (enter credentials, ...)
User -> Redmine: Browser request containing cas-ST
activate Redmine
Redmine -> Redmine: Validate ST and add user attributes to session
Redmine -> account_controller_patch: 'cas'
activate account_controller_patch
account_controller_patch -> user_manager: 'create_or_update_user'
activate user_manager
user_manager -> user_manager: create/update user
user_manager -> account_controller_patch: 'create_or_update_user' returns the created/updated user
deactivate user_manager
account_controller_patch -> application_controller: 'logged_user='
activate application_controller
application_controller -> application_controller: destroy session
application_controller -> Redmine: User.current=user
application_controller -> account_controller_patch: return
deactivate application_controller
account_controller_patch -> account_controller_patch: 'redirect_to_ref_or_default'
account_controller_patch -> Redmine: return
deactivate account_controller_patch
Redmine -> User: Render page with correct user
deactivate Redmine
@enduml

/'
EcoSystem plantuml link:
https://ecosystem.cloudogu.com/plantuml/uml/xLVBhjem4DtdAwQhW5JeFXALsblT3-3HBYtVs04BOwUsSn5_tx7pQBYGG12iBYloc3bdvinuXgmiDp3v3dFETa9nIE2dqNjyE9dplmMtBgAf4-_KyTeagatHY-Qv52brGYkIQkMCbf8RabENRX0gJgab1O8HorsHn_-n-XoZNjHELiytWAk3vL9MLLAPK8oaXJ5SkP3XrRdT5DMbt36guH4DLW1Pd3aGfmajd9PwBLHy5n0mM3AZB2WX8yOVLhbJZUx2V4LrplVCCFRUqz77laAkQKKCiq1scuHmem1r0GoNchAJWC9jKEVjG497ZDeMq_1eV96xda_N2dcvtAr9LrqcyCOpRJZnhbh1HkijZD8DJxT4P6NmnE3a58QpyT1HsO7p-BbvA_7jHx6Yg0Ztmcq8AX3VuGmsbS8BP4WTE0rLkKOqJNM1n-yaeWJPnrUtpdC5FbVWSmK-L-2dMe6NPyAzfjlGDCxjwVZbn-952XGlILuDtV6zDbkR97Cg9Fwy2kby-sseOf9Rh4kvB2AbaKs_OoSqKCiDXopOW_2MQs7ncZEWpiS5rb63ynQ4ydijEFbbbYHX37-9s_7vgXwl9hI4K5uepD4Hg5LOLPzefUklqkCFPfD9lOSHPeZlKoJ6Aq6b_GhJwNJSk3LfL1zsOCeFE_0oKg64Mdl4oMBP-wdNmFocKZ1lj5W2YWUKCV176TLmHhmL3jN4j2ot5ejrr41To_UaUJeCewuN7ZqilXrLT5sE6yCHYcX3Yjo7-t4XjCsZziqfLWdrhSG9xquS-b8x6qWpznmsLsd2AePIpdOd7CNQfq7dyCK6MtCMg6UFs8eC6yheGrFrReIcZzhpRHOoxg7jbBUKyPgzrITRT_NgkU2tjU6PBoFZ6IsaYtiXcpJF1DZLtMV6X68eG8vr1_yN6O-i2MFZOuDKdly0
'/